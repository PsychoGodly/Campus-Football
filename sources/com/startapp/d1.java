package com.startapp;

import com.startapp.simple.bloomfilter.algo.OpenBitSet;
import com.startapp.simple.bloomfilter.version.BloomVersion;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.PrintStream;

/* compiled from: Sta */
public class d1 {

    /* renamed from: a  reason: collision with root package name */
    public final o8 f15719a;

    /* renamed from: b  reason: collision with root package name */
    public final x9 f15720b;

    static {
        BloomVersion bloomVersion = BloomVersion.FOUR;
        int a10 = bloomVersion.a();
        int b10 = bloomVersion.b();
        try {
            byte[] bArr = new byte[1320];
            for (int i10 = 0; i10 < 2640; i10 += 2) {
                bArr[i10 / 2] = (byte) (Character.digitcharAt(i10 + 1), 16) + (Character.digitcharAt(i10), 16) << 4));
            }
            DataInputStream dataInputStream = new DataInputStream(new ByteArrayInputStream(bArr));
            OpenBitSet openBitSet = new OpenBitSet((long) (a10 * b10));
            long a11 = (long) openBitSet.a();
            int b11 = openBitSet.b();
            for (int i11 = 0; i11 < b11; i11++) {
                long[] a12 = openBitSet.a(i11);
                int i12 = 0;
                while (true) {
                    if (i12 >= 4096) {
                        break;
                    }
                    long j10 = a11 - 1;
                    if (a11 <= 0) {
                        a11 = j10;
                        break;
                    }
                    a12[i12] = dataInputStream.readLong();
                    i12++;
                    a11 = j10;
                }
            }
        } catch (Exception e10) {
            if (e10.getMessage() != null && e10.getMessage().contains("HighPageCountException")) {
                PrintStream printStream = System.err;
                StringBuilder a13 = p0.a("HighPageCountException (PLM-2573) ");
                a13.append(e10.getMessage());
                a13.append(", bad bloom token: ");
                a13.append
                printStream.println(a13.toString());
            }
        }
    }

    public d1() {
        s7 s7Var = new s7();
        x9 x9Var = new x9();
        this.f15720b = x9Var;
        this.f15719a = new o8(s7Var, x9Var);
    }
}
